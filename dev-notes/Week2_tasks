# 📅 ChronoChem 第二週任務計畫：時間旅行 & 互動功能開發

## 🎯 核心目標
- [x] 完成 3D 場景的基本互動
- [x] 實現時間軸選擇功能
- [x] 添加化學家模型和互動
- [x] 建立基本的對話系統

---

## 🔧 前端 (Vue3 + Three.js)

### 1. 時光機 UI（時間選擇器）
- [ ] 使用 Vue Router 管理不同歷史場景路由
- [ ] 設計時間選擇 UI（可滑動或點選年份）
- [ ] 將不同年份連結至對應路由（如 `/time/1774`）

### 2. 3D 場景切換
- [x] 根據年份載入不同 GLTF 模型
- [x] 加入轉場動畫效果（淡入淡出）
- [x] 建立多個 Vue 視圖（每個代表一個歷史場景）

### 3. 互動化學家（Clickable 人物模型）
- [x] 對化學家模型加入 Raycaster 點擊事件
- [x] 點擊人物後彈出對話視窗
- [x] 與 GPT-4 API（或 mock JSON）整合對話功能

### 4. Pinia 狀態管理
- [ ] 建立 Pinia store 管理：
  - 當前年份 / 場景
  - 活躍化學家 / 對話狀態
  - 已完成事件清單（未來可用於成就系統）

---

## 🧠 後端 (Django + DRF)

### 1. 擴充資料模型
- [ ] 新增 `Chemist` 模型（包含姓名、生卒年、簡介、代表實驗）
- [ ] 新增 `HistoricalEvent` 模型（與年份和化學家關聯）

### 2. API 設計
- [ ] `/api/chemists/`：取得所有歷史化學家資訊
- [ ] `/api/events/?year=1774`：依年份查詢相關事件
- [ ] `/api/chat/`：提交角色與使用者訊息，回傳 GPT 模擬對話（初期可用 mock）

### 3. 對話模擬（初步整合 GPT）
- [ ] 建立簡易 GPT 代理 view（或 mock 回傳）
- [ ] 支援前端傳入化學家名稱與提問內容
- [ ] 回傳模擬回答（之後再替換為 GPT-4 串接）

---

## 🧪 測試項目
- [ ] Vue Router 是否正確切換場景
- [ ] 點擊人物是否能觸發對話彈窗
- [ ] 對話框是否成功顯示從 API 回傳的文字
- [ ] API 回傳格式與 Vue 顯示資料是否對應

---

## 📁 前端目錄結構建議
frontend/
├── src/
│   ├── components/
│   │   ├── TimeMachine.vue         # 時光機選擇元件
│   │   ├── ChemistDialog.vue       # 對話彈窗元件
│   ├── views/
│   │   ├── Era1774.vue             # 1774 年場景視圖
│   │   ├── Era1869.vue             # 1869 年場景視圖
│   ├── router/
│   │   └── index.ts                # Vue Router 設定檔
│   ├── store/
│   │   └── timeTravel.ts           # 時光旅行狀態管理 (Pinia)